<?php

namespace {{ namespace }}\Doctrine\EntityManager;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;
use {{ namespace }}\Model\{{ model_name }}Interface;
use {{ namespace }}\Model\Manager\{{ model_name }}Manager as Base{{ model_name }}Manager;

class {{ model_name }}Manager extends Base{{ model_name }}Manager
{
{% block class_body %}

    /**
     * @var EntityManager
     */
    protected $em;

    /**
     * @var EntityRepository
     */
    protected $repository;

    /**
     * @var string
     */
    protected $class;

    /**
     * Constructor.
     *
     * @param EntityManager $em
     * @param string $class
     */
    public function __construct(EntityManager $em, $class)
    {
        $this->em = $em;
        $this->repository = $em->getRepository($class);
        $this->class = $em->getClassMetadata($class)->name;
    }

    /**
     * {@inheritdoc}
     */
    public function add({{ model_name }}Interface $value, $save = false)
    {
        $this->em->persist($value);
        if (true === $save) {
            $this->save();
        }
    }

    /**
     * {@inheritdoc}
     */
    public function remove({{ model_name }}Interface $value, $save = false)
    {
        $this->em->remove($value);
        if (true === $save) {
            $this->save();
        }
    }

    /**
     * {@inheritdoc}
     */
    public function save()
    {
        $this->em->flush();
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->em->clear($this->getClass());
    }

    /**
     * {@inheritdoc}
     */
    public function getClass()
    {
        return $this->class;
    }
{% endblock class_body %}
}
